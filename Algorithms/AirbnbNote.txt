1. Merge interval, LC
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=439706&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311

2. . 新题。投两个骰子，从1-9里面选出几个数字，加和为这两个骰子的和。-google 1point3acres
比如第一次，两个骰子为3，5，那么我们可以选出几个数字，加和为8. 假设我们选1和7.
第二次，两个骰子为4，6，那么第一次1和7选了，这次不能再选了。我们可以选4和6.
第三次，做同样的事情
。。。。. visit 1point3acres for more.
怎样找到一个最优解，使得我们胜率最大？胜利的定义是所有1-9的数都取了。

http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=325445&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311

3. design: flight ticket booking from scratch.
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=437174&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311

4. Guess Number
Guess Number
	The system has a secret four digits number, in which each digit is in range of one to 6 [1, 6].
	Given a four digital number, the system also provide a API that returns the number of correct matched digits.
	Design a method to guess this secret number.
https://docs.google.com/document/d/1ksHuKzp2GIfCISf7YCEoe6EzUZ-x8Q02sHVgZYtPGvw/edit

import socket

class MySocket:
    def __init__(self, sock=None):
        if sock is None:
            self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        else:
            self.sock = sock

    def connect(self, host, port):
        self.sock.connect((host, port))

    def mysend(self, msg):
        sent = self.sock.send(msg)
        if sent == 0:
            raise RuntimeError("socket connection broken")

    def myreceive(self):
        chunk = self.sock.recv(2048)
        if chunk == b'':
            raise RuntimeError("socket connection broken")
        return chunk
    

def guess_game():
    s = MySocket()
    s.connect()
    s.mysend('START\n'.encode())
    r = s.myreceive()

    # Find starting point
    start = [1,1,1,1]
    while True:
        r = take_guess(s, start)
        if r[0] == r[2] and r[0] == '0':
            break
        else:
            start = [x+1 for x in start]
    
    print(start)
    res = []
    c = start[0]
    for i in range(4):
        for j in range(1, 7):
            if j != c:
                guess = start[:i] + [j] + start[i+1:]
                r = take_guess(s, guess)
                if r[0] == '1':
                    res.append(j)
                    break

    return ''.join([str(x) for x in res])

def take_guess(s, guess):
    guess = ''.join([str(x) for x in guess])
    s.mysend(('GUESS ' + guess + '\n').encode())
    r = s.myreceive()
    r = r.decode()
    return r


print(guess_game())


5. http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=200829&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311

6. 第一轮，merge intervals，一个白人小哥面的，第二轮是找最少的点遍历整个graph，之前地里有人发过，面试官是个国人妹子。
http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=212885&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311

7. 
北京的airbnb
oa 2，就是按照一组数据按照host_id分页。.留学论坛-一亩-三分地
我实现的思路能做到最坏情况下，不会遍历整个数组。
电面follow up：.1point3acres网
优化实现，即从O（N*N) 基础上再次优化。page number可以不用考虑。
磕磕绊绊，N * m(lgm),m是不同host_id的数量。思路就是先统计hash:  key是host_id， values是[出现的index排序]。. 留学申请论坛-一亩三分地
然后磕磕绊绊算出了时间复杂度。再次让优化。。。
然后我说似乎没必要每次排序，可以使用heap 插入。。然后又磕磕绊绊一会。。。然后面试官说时间太久了，挂了。
. 留学申请论坛-一亩三分地
电话挂了，我也挂了。
电话follow up挂很少见吧。但我不知道我的follow up这般难。。。。

8. 

http://www.1point3acres.com/bbs/forum.php?mod=viewthread&tid=436244&extra=page%3D1%26filter%3Dsortid%26sortid%3D311%26searchoption%5B3046%5D%5Bvalue%5D%3D37%26searchoption%5B3046%5D%5Btype%5D%3Dradio%26sortid%3D311
